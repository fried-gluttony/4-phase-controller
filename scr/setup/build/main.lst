ARM GAS  /tmp/ccn0fFJU.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	MX_GPIO_Init:
  23              	.LFB68:
  24              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccn0fFJU.s 			page 2


  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** /* USER CODE END PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  44:Src/main.c    **** UART_HandleTypeDef huart2;
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE BEGIN PV */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END PV */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  51:Src/main.c    **** void SystemClock_Config(void);
  52:Src/main.c    **** static void MX_GPIO_Init(void);
  53:Src/main.c    **** static void MX_USART2_UART_Init(void);
  54:Src/main.c    **** /* USER CODE BEGIN PFP */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE END PFP */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  59:Src/main.c    **** /* USER CODE BEGIN 0 */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END 0 */
  62:Src/main.c    **** 
  63:Src/main.c    **** /**
  64:Src/main.c    ****   * @brief  The application entry point.
  65:Src/main.c    ****   * @retval int
  66:Src/main.c    ****   */
  67:Src/main.c    **** int main(void)
  68:Src/main.c    **** {
  69:Src/main.c    ****   /* USER CODE BEGIN 1 */
  70:Src/main.c    **** 
  71:Src/main.c    **** 
  72:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  73:Src/main.c    ****   HAL_Init();
  74:Src/main.c    **** 
  75:Src/main.c    ****   /* USER CODE BEGIN Init */
  76:Src/main.c    **** 
  77:Src/main.c    ****   /* USER CODE END Init */
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* Configure the system clock */
  80:Src/main.c    ****   SystemClock_Config();
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE END SysInit */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* Initialize all configured peripherals */
  87:Src/main.c    ****   MX_GPIO_Init();
  88:Src/main.c    ****   MX_USART2_UART_Init();
  89:Src/main.c    ****   /* USER CODE BEGIN 2 */
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE END 2 */
ARM GAS  /tmp/ccn0fFJU.s 			page 3


  92:Src/main.c    **** 
  93:Src/main.c    ****   /* Infinite loop */
  94:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  95:Src/main.c    ****   while (1)
  96:Src/main.c    ****   {
  97:Src/main.c    ****     /* USER CODE END WHILE */
  98:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_10);
  99:Src/main.c    ****     HAL_Delay(1);
 100:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_10);
 101:Src/main.c    ****     HAL_Delay(2);
 102:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_10);
 103:Src/main.c    ****     HAL_Delay(5);
 104:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_10);
 105:Src/main.c    ****     HAL_Delay(10);
 106:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_10);
 107:Src/main.c    ****     HAL_Delay(20);
 108:Src/main.c    ****     
 109:Src/main.c    ****     
 110:Src/main.c    ****     /* USER CODE BEGIN 3 */
 111:Src/main.c    ****   }
 112:Src/main.c    ****   /* USER CODE END 3 */
 113:Src/main.c    **** }
 114:Src/main.c    **** 
 115:Src/main.c    **** /**
 116:Src/main.c    ****   * @brief System Clock Configuration
 117:Src/main.c    ****   * @retval None
 118:Src/main.c    ****   */
 119:Src/main.c    **** void SystemClock_Config(void)
 120:Src/main.c    **** {
 121:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 122:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 123:Src/main.c    **** 
 124:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 125:Src/main.c    ****   */
 126:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 127:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 128:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 130:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 132:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 133:Src/main.c    ****   {
 134:Src/main.c    ****     Error_Handler();
 135:Src/main.c    ****   }
 136:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 137:Src/main.c    ****   */
 138:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 139:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 140:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 141:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 142:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 143:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 144:Src/main.c    **** 
 145:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 146:Src/main.c    ****   {
 147:Src/main.c    ****     Error_Handler();
 148:Src/main.c    ****   }
ARM GAS  /tmp/ccn0fFJU.s 			page 4


 149:Src/main.c    **** }
 150:Src/main.c    **** 
 151:Src/main.c    **** /**
 152:Src/main.c    ****   * @brief USART2 Initialization Function
 153:Src/main.c    ****   * @param None
 154:Src/main.c    ****   * @retval None
 155:Src/main.c    ****   */
 156:Src/main.c    **** static void MX_USART2_UART_Init(void)
 157:Src/main.c    **** {
 158:Src/main.c    **** 
 159:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 160:Src/main.c    **** 
 161:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 162:Src/main.c    **** 
 163:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 164:Src/main.c    **** 
 165:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 166:Src/main.c    ****   huart2.Instance = USART2;
 167:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 168:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 169:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 170:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 171:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 172:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 173:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 174:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 175:Src/main.c    ****   {
 176:Src/main.c    ****     Error_Handler();
 177:Src/main.c    ****   }
 178:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 179:Src/main.c    **** 
 180:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 181:Src/main.c    **** 
 182:Src/main.c    **** }
 183:Src/main.c    **** 
 184:Src/main.c    **** /**
 185:Src/main.c    ****   * @brief GPIO Initialization Function
 186:Src/main.c    ****   * @param None
 187:Src/main.c    ****   * @retval None
 188:Src/main.c    ****   */
 189:Src/main.c    **** static void MX_GPIO_Init(void)
 190:Src/main.c    **** {
  25              		.loc 1 190 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 32
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 56
ARM GAS  /tmp/ccn0fFJU.s 			page 5


 191:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 191 0
  41 0004 0024     		movs	r4, #0
  42 0006 0494     		str	r4, [sp, #16]
  43 0008 0594     		str	r4, [sp, #20]
  44 000a 0694     		str	r4, [sp, #24]
  45 000c 0794     		str	r4, [sp, #28]
  46              	.LBB2:
 192:Src/main.c    **** 
 193:Src/main.c    ****   /* GPIO Ports Clock Enable */
 194:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 194 0
  48 000e 2B4B     		ldr	r3, .L3
  49 0010 9A69     		ldr	r2, [r3, #24]
  50 0012 42F01002 		orr	r2, r2, #16
  51 0016 9A61     		str	r2, [r3, #24]
  52 0018 9A69     		ldr	r2, [r3, #24]
  53 001a 02F01002 		and	r2, r2, #16
  54 001e 0092     		str	r2, [sp]
  55 0020 009A     		ldr	r2, [sp]
  56              	.LBE2:
  57              	.LBB3:
 195:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  58              		.loc 1 195 0
  59 0022 9A69     		ldr	r2, [r3, #24]
  60 0024 42F02002 		orr	r2, r2, #32
  61 0028 9A61     		str	r2, [r3, #24]
  62 002a 9A69     		ldr	r2, [r3, #24]
  63 002c 02F02002 		and	r2, r2, #32
  64 0030 0192     		str	r2, [sp, #4]
  65 0032 019A     		ldr	r2, [sp, #4]
  66              	.LBE3:
  67              	.LBB4:
 196:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  68              		.loc 1 196 0
  69 0034 9A69     		ldr	r2, [r3, #24]
  70 0036 42F00402 		orr	r2, r2, #4
  71 003a 9A61     		str	r2, [r3, #24]
  72 003c 9A69     		ldr	r2, [r3, #24]
  73 003e 02F00402 		and	r2, r2, #4
  74 0042 0292     		str	r2, [sp, #8]
  75 0044 029A     		ldr	r2, [sp, #8]
  76              	.LBE4:
  77              	.LBB5:
 197:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  78              		.loc 1 197 0
  79 0046 9A69     		ldr	r2, [r3, #24]
  80 0048 42F00802 		orr	r2, r2, #8
  81 004c 9A61     		str	r2, [r3, #24]
  82 004e 9B69     		ldr	r3, [r3, #24]
  83 0050 03F00803 		and	r3, r3, #8
  84 0054 0393     		str	r3, [sp, #12]
  85 0056 039B     		ldr	r3, [sp, #12]
  86              	.LBE5:
 198:Src/main.c    **** 
 199:Src/main.c    ****   /*Configure GPIO pin Output Level */
 200:Src/main.c    ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
ARM GAS  /tmp/ccn0fFJU.s 			page 6


  87              		.loc 1 200 0
  88 0058 194F     		ldr	r7, .L3+4
  89 005a 2246     		mov	r2, r4
  90 005c 2021     		movs	r1, #32
  91 005e 3846     		mov	r0, r7
  92 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL0:
 201:Src/main.c    **** 
 202:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 203:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
  94              		.loc 1 203 0
  95 0064 4FF40053 		mov	r3, #8192
  96 0068 0493     		str	r3, [sp, #16]
 204:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
  97              		.loc 1 204 0
  98 006a 164B     		ldr	r3, .L3+8
  99 006c 0593     		str	r3, [sp, #20]
 205:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 100              		.loc 1 205 0
 101 006e 0694     		str	r4, [sp, #24]
 206:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 102              		.loc 1 206 0
 103 0070 154D     		ldr	r5, .L3+12
 104 0072 04A9     		add	r1, sp, #16
 105 0074 2846     		mov	r0, r5
 106 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 107              	.LVL1:
 207:Src/main.c    **** 
 208:Src/main.c    ****   /*Configure GPIO pin : LD2_Pin */
 209:Src/main.c    ****   GPIO_InitStruct.Pin = LD2_Pin;
 108              		.loc 1 209 0
 109 007a 2023     		movs	r3, #32
 110 007c 0493     		str	r3, [sp, #16]
 210:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 111              		.loc 1 210 0
 112 007e 0126     		movs	r6, #1
 113 0080 0596     		str	r6, [sp, #20]
 211:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 114              		.loc 1 211 0
 115 0082 0694     		str	r4, [sp, #24]
 212:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 212 0
 117 0084 0223     		movs	r3, #2
 118 0086 0793     		str	r3, [sp, #28]
 213:Src/main.c    ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 119              		.loc 1 213 0
 120 0088 04A9     		add	r1, sp, #16
 121 008a 3846     		mov	r0, r7
 122 008c FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL2:
 214:Src/main.c    **** 
 215:Src/main.c    ****   /*Configure GPIO pin : PC10 */
 216:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_10;
 124              		.loc 1 216 0
 125 0090 4FF48063 		mov	r3, #1024
 126 0094 0493     		str	r3, [sp, #16]
 217:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  /tmp/ccn0fFJU.s 			page 7


 127              		.loc 1 217 0
 128 0096 0596     		str	r6, [sp, #20]
 218:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 129              		.loc 1 218 0
 130 0098 0694     		str	r4, [sp, #24]
 219:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 131              		.loc 1 219 0
 132 009a 0323     		movs	r3, #3
 133 009c 0793     		str	r3, [sp, #28]
 220:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 134              		.loc 1 220 0
 135 009e 04A9     		add	r1, sp, #16
 136 00a0 2846     		mov	r0, r5
 137 00a2 FFF7FEFF 		bl	HAL_GPIO_Init
 138              	.LVL3:
 221:Src/main.c    **** 
 222:Src/main.c    **** 
 223:Src/main.c    **** 
 224:Src/main.c    **** 
 225:Src/main.c    ****   /* EXTI interrupt init*/
 226:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 139              		.loc 1 226 0
 140 00a6 2246     		mov	r2, r4
 141 00a8 2146     		mov	r1, r4
 142 00aa 2820     		movs	r0, #40
 143 00ac FFF7FEFF 		bl	HAL_NVIC_SetPriority
 144              	.LVL4:
 227:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 145              		.loc 1 227 0
 146 00b0 2820     		movs	r0, #40
 147 00b2 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 148              	.LVL5:
 228:Src/main.c    **** 
 229:Src/main.c    **** }
 149              		.loc 1 229 0
 150 00b6 09B0     		add	sp, sp, #36
 151              	.LCFI2:
 152              		.cfi_def_cfa_offset 20
 153              		@ sp needed
 154 00b8 F0BD     		pop	{r4, r5, r6, r7, pc}
 155              	.L4:
 156 00ba 00BF     		.align	2
 157              	.L3:
 158 00bc 00100240 		.word	1073876992
 159 00c0 00080140 		.word	1073809408
 160 00c4 00001110 		.word	269549568
 161 00c8 00100140 		.word	1073811456
 162              		.cfi_endproc
 163              	.LFE68:
 165              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 166              		.align	1
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 170              		.fpu softvfp
 172              	MX_USART2_UART_Init:
 173              	.LFB67:
ARM GAS  /tmp/ccn0fFJU.s 			page 8


 157:Src/main.c    **** 
 174              		.loc 1 157 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178 0000 08B5     		push	{r3, lr}
 179              	.LCFI3:
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 3, -8
 182              		.cfi_offset 14, -4
 166:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 183              		.loc 1 166 0
 184 0002 0848     		ldr	r0, .L7
 185 0004 084B     		ldr	r3, .L7+4
 186 0006 0360     		str	r3, [r0]
 167:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 187              		.loc 1 167 0
 188 0008 4FF4E133 		mov	r3, #115200
 189 000c 4360     		str	r3, [r0, #4]
 168:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 190              		.loc 1 168 0
 191 000e 0023     		movs	r3, #0
 192 0010 8360     		str	r3, [r0, #8]
 169:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 193              		.loc 1 169 0
 194 0012 C360     		str	r3, [r0, #12]
 170:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 195              		.loc 1 170 0
 196 0014 0361     		str	r3, [r0, #16]
 171:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 197              		.loc 1 171 0
 198 0016 0C22     		movs	r2, #12
 199 0018 4261     		str	r2, [r0, #20]
 172:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 200              		.loc 1 172 0
 201 001a 8361     		str	r3, [r0, #24]
 173:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 202              		.loc 1 173 0
 203 001c C361     		str	r3, [r0, #28]
 174:Src/main.c    ****   {
 204              		.loc 1 174 0
 205 001e FFF7FEFF 		bl	HAL_UART_Init
 206              	.LVL6:
 207 0022 08BD     		pop	{r3, pc}
 208              	.L8:
 209              		.align	2
 210              	.L7:
 211 0024 00000000 		.word	huart2
 212 0028 00440040 		.word	1073759232
 213              		.cfi_endproc
 214              	.LFE67:
 216              		.section	.text.SystemClock_Config,"ax",%progbits
 217              		.align	1
 218              		.global	SystemClock_Config
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
ARM GAS  /tmp/ccn0fFJU.s 			page 9


 222              		.fpu softvfp
 224              	SystemClock_Config:
 225              	.LFB66:
 120:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 226              		.loc 1 120 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 64
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 30B5     		push	{r4, r5, lr}
 231              	.LCFI4:
 232              		.cfi_def_cfa_offset 12
 233              		.cfi_offset 4, -12
 234              		.cfi_offset 5, -8
 235              		.cfi_offset 14, -4
 236 0002 91B0     		sub	sp, sp, #68
 237              	.LCFI5:
 238              		.cfi_def_cfa_offset 80
 121:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 239              		.loc 1 121 0
 240 0004 2822     		movs	r2, #40
 241 0006 0021     		movs	r1, #0
 242 0008 06A8     		add	r0, sp, #24
 243 000a FFF7FEFF 		bl	memset
 244              	.LVL7:
 122:Src/main.c    **** 
 245              		.loc 1 122 0
 246 000e 0024     		movs	r4, #0
 247 0010 0194     		str	r4, [sp, #4]
 248 0012 0294     		str	r4, [sp, #8]
 249 0014 0394     		str	r4, [sp, #12]
 250 0016 0494     		str	r4, [sp, #16]
 251 0018 0594     		str	r4, [sp, #20]
 126:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 252              		.loc 1 126 0
 253 001a 0225     		movs	r5, #2
 254 001c 0695     		str	r5, [sp, #24]
 127:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 255              		.loc 1 127 0
 256 001e 0123     		movs	r3, #1
 257 0020 0A93     		str	r3, [sp, #40]
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 258              		.loc 1 128 0
 259 0022 1023     		movs	r3, #16
 260 0024 0B93     		str	r3, [sp, #44]
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 261              		.loc 1 129 0
 262 0026 0D95     		str	r5, [sp, #52]
 131:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 263              		.loc 1 131 0
 264 0028 4FF46013 		mov	r3, #3670016
 265 002c 0F93     		str	r3, [sp, #60]
 132:Src/main.c    ****   {
 266              		.loc 1 132 0
 267 002e 06A8     		add	r0, sp, #24
 268 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 269              	.LVL8:
 138:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccn0fFJU.s 			page 10


 270              		.loc 1 138 0
 271 0034 0F23     		movs	r3, #15
 272 0036 0193     		str	r3, [sp, #4]
 140:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 273              		.loc 1 140 0
 274 0038 0295     		str	r5, [sp, #8]
 141:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 275              		.loc 1 141 0
 276 003a 0394     		str	r4, [sp, #12]
 142:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 277              		.loc 1 142 0
 278 003c 4FF48063 		mov	r3, #1024
 279 0040 0493     		str	r3, [sp, #16]
 143:Src/main.c    **** 
 280              		.loc 1 143 0
 281 0042 0594     		str	r4, [sp, #20]
 145:Src/main.c    ****   {
 282              		.loc 1 145 0
 283 0044 2946     		mov	r1, r5
 284 0046 01A8     		add	r0, sp, #4
 285 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 286              	.LVL9:
 149:Src/main.c    **** 
 287              		.loc 1 149 0
 288 004c 11B0     		add	sp, sp, #68
 289              	.LCFI6:
 290              		.cfi_def_cfa_offset 12
 291              		@ sp needed
 292 004e 30BD     		pop	{r4, r5, pc}
 293              		.cfi_endproc
 294              	.LFE66:
 296              		.section	.text.main,"ax",%progbits
 297              		.align	1
 298              		.global	main
 299              		.syntax unified
 300              		.thumb
 301              		.thumb_func
 302              		.fpu softvfp
 304              	main:
 305              	.LFB65:
  68:Src/main.c    ****   /* USER CODE BEGIN 1 */
 306              		.loc 1 68 0
 307              		.cfi_startproc
 308              		@ Volatile: function does not return.
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311 0000 08B5     		push	{r3, lr}
 312              	.LCFI7:
 313              		.cfi_def_cfa_offset 8
 314              		.cfi_offset 3, -8
 315              		.cfi_offset 14, -4
  73:Src/main.c    **** 
 316              		.loc 1 73 0
 317 0002 FFF7FEFF 		bl	HAL_Init
 318              	.LVL10:
  80:Src/main.c    **** 
 319              		.loc 1 80 0
ARM GAS  /tmp/ccn0fFJU.s 			page 11


 320 0006 FFF7FEFF 		bl	SystemClock_Config
 321              	.LVL11:
  87:Src/main.c    ****   MX_USART2_UART_Init();
 322              		.loc 1 87 0
 323 000a FFF7FEFF 		bl	MX_GPIO_Init
 324              	.LVL12:
  88:Src/main.c    ****   /* USER CODE BEGIN 2 */
 325              		.loc 1 88 0
 326 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 327              	.LVL13:
 328              	.L12:
  98:Src/main.c    ****     HAL_Delay(1);
 329              		.loc 1 98 0 discriminator 1
 330 0012 154C     		ldr	r4, .L14
 331 0014 4FF48061 		mov	r1, #1024
 332 0018 2046     		mov	r0, r4
 333 001a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 334              	.LVL14:
  99:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_10);
 335              		.loc 1 99 0 discriminator 1
 336 001e 0120     		movs	r0, #1
 337 0020 FFF7FEFF 		bl	HAL_Delay
 338              	.LVL15:
 100:Src/main.c    ****     HAL_Delay(2);
 339              		.loc 1 100 0 discriminator 1
 340 0024 4FF48061 		mov	r1, #1024
 341 0028 2046     		mov	r0, r4
 342 002a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 343              	.LVL16:
 101:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_10);
 344              		.loc 1 101 0 discriminator 1
 345 002e 0220     		movs	r0, #2
 346 0030 FFF7FEFF 		bl	HAL_Delay
 347              	.LVL17:
 102:Src/main.c    ****     HAL_Delay(5);
 348              		.loc 1 102 0 discriminator 1
 349 0034 4FF48061 		mov	r1, #1024
 350 0038 2046     		mov	r0, r4
 351 003a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 352              	.LVL18:
 103:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_10);
 353              		.loc 1 103 0 discriminator 1
 354 003e 0520     		movs	r0, #5
 355 0040 FFF7FEFF 		bl	HAL_Delay
 356              	.LVL19:
 104:Src/main.c    ****     HAL_Delay(10);
 357              		.loc 1 104 0 discriminator 1
 358 0044 4FF48061 		mov	r1, #1024
 359 0048 2046     		mov	r0, r4
 360 004a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 361              	.LVL20:
 105:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_10);
 362              		.loc 1 105 0 discriminator 1
 363 004e 0A20     		movs	r0, #10
 364 0050 FFF7FEFF 		bl	HAL_Delay
 365              	.LVL21:
 106:Src/main.c    ****     HAL_Delay(20);
ARM GAS  /tmp/ccn0fFJU.s 			page 12


 366              		.loc 1 106 0 discriminator 1
 367 0054 4FF48061 		mov	r1, #1024
 368 0058 2046     		mov	r0, r4
 369 005a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 370              	.LVL22:
 107:Src/main.c    ****     
 371              		.loc 1 107 0 discriminator 1
 372 005e 1420     		movs	r0, #20
 373 0060 FFF7FEFF 		bl	HAL_Delay
 374              	.LVL23:
 375 0064 D5E7     		b	.L12
 376              	.L15:
 377 0066 00BF     		.align	2
 378              	.L14:
 379 0068 00100140 		.word	1073811456
 380              		.cfi_endproc
 381              	.LFE65:
 383              		.section	.text.Error_Handler,"ax",%progbits
 384              		.align	1
 385              		.global	Error_Handler
 386              		.syntax unified
 387              		.thumb
 388              		.thumb_func
 389              		.fpu softvfp
 391              	Error_Handler:
 392              	.LFB70:
 230:Src/main.c    **** 
 231:Src/main.c    **** static void HAL_ADC_MspInit(void)
 232:Src/main.c    **** {
 233:Src/main.c    ****     /*Configure ADC*/
 234:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 235:Src/main.c    ****   __ADC1_CLK_ENABLE();
 236:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 237:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 238:Src/main.c    ****   HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
 239:Src/main.c    **** 
 240:Src/main.c    **** }
 241:Src/main.c    **** 
 242:Src/main.c    **** /* USER CODE BEGIN 4 */
 243:Src/main.c    **** 
 244:Src/main.c    **** /* USER CODE END 4 */
 245:Src/main.c    **** 
 246:Src/main.c    **** /**
 247:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 248:Src/main.c    ****   * @retval None
 249:Src/main.c    ****   */
 250:Src/main.c    **** void Error_Handler(void)
 251:Src/main.c    **** {
 393              		.loc 1 251 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 398 0000 7047     		bx	lr
 399              		.cfi_endproc
 400              	.LFE70:
 402              		.comm	huart2,64,4
ARM GAS  /tmp/ccn0fFJU.s 			page 13


 403              		.text
 404              	.Letext0:
 405              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 406              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 407              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 408              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 409              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 410              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 411              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 412              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 413              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 414              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 415              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 416              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 417              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/ccn0fFJU.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccn0fFJU.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccn0fFJU.s:22     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccn0fFJU.s:158    .text.MX_GPIO_Init:00000000000000bc $d
     /tmp/ccn0fFJU.s:166    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccn0fFJU.s:172    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccn0fFJU.s:211    .text.MX_USART2_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart2
     /tmp/ccn0fFJU.s:217    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccn0fFJU.s:224    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccn0fFJU.s:297    .text.main:0000000000000000 $t
     /tmp/ccn0fFJU.s:304    .text.main:0000000000000000 main
     /tmp/ccn0fFJU.s:379    .text.main:0000000000000068 $d
     /tmp/ccn0fFJU.s:384    .text.Error_Handler:0000000000000000 $t
     /tmp/ccn0fFJU.s:391    .text.Error_Handler:0000000000000000 Error_Handler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
